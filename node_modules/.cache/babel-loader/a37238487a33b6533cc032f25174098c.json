{"ast":null,"code":"import * as React from 'react';\nimport { TransitionGroup } from 'react-transition-group';\nimport PrimeReact$1 from 'primereact/api';\nimport { CSSTransition } from 'primereact/csstransition';\nimport { useTimeout, useUnmountEffect } from 'primereact/hooks';\nimport { Portal } from 'primereact/portal';\nimport { classNames, DomHandler, ObjectUtils, ZIndexUtils } from 'primereact/utils';\nimport { Ripple } from 'primereact/ripple';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (null != _i) {\n    var _s,\n        _e,\n        _x,\n        _r,\n        _arr = [],\n        _n = !0,\n        _d = !1;\n\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) {\n        ;\n      }\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar FilterMatchMode = Object.freeze({\n  STARTS_WITH: 'startsWith',\n  CONTAINS: 'contains',\n  NOT_CONTAINS: 'notContains',\n  ENDS_WITH: 'endsWith',\n  EQUALS: 'equals',\n  NOT_EQUALS: 'notEquals',\n  IN: 'in',\n  LESS_THAN: 'lt',\n  LESS_THAN_OR_EQUAL_TO: 'lte',\n  GREATER_THAN: 'gt',\n  GREATER_THAN_OR_EQUAL_TO: 'gte',\n  BETWEEN: 'between',\n  DATE_IS: 'dateIs',\n  DATE_IS_NOT: 'dateIsNot',\n  DATE_BEFORE: 'dateBefore',\n  DATE_AFTER: 'dateAfter',\n  CUSTOM: 'custom'\n});\n\nvar PrimeReact =\n/*#__PURE__*/\n_createClass(function PrimeReact() {\n  _classCallCheck(this, PrimeReact);\n});\n\n_defineProperty(PrimeReact, \"ripple\", false);\n\n_defineProperty(PrimeReact, \"inputStyle\", 'outlined');\n\n_defineProperty(PrimeReact, \"locale\", 'en');\n\n_defineProperty(PrimeReact, \"appendTo\", null);\n\n_defineProperty(PrimeReact, \"cssTransition\", true);\n\n_defineProperty(PrimeReact, \"autoZIndex\", true);\n\n_defineProperty(PrimeReact, \"nonce\", null);\n\n_defineProperty(PrimeReact, \"nullSortOrder\", 1);\n\n_defineProperty(PrimeReact, \"zIndex\", {\n  modal: 1100,\n  overlay: 1000,\n  menu: 1000,\n  tooltip: 1100,\n  toast: 1200\n});\n\n_defineProperty(PrimeReact, \"filterMatchModeOptions\", {\n  text: [FilterMatchMode.STARTS_WITH, FilterMatchMode.CONTAINS, FilterMatchMode.NOT_CONTAINS, FilterMatchMode.ENDS_WITH, FilterMatchMode.EQUALS, FilterMatchMode.NOT_EQUALS],\n  numeric: [FilterMatchMode.EQUALS, FilterMatchMode.NOT_EQUALS, FilterMatchMode.LESS_THAN, FilterMatchMode.LESS_THAN_OR_EQUAL_TO, FilterMatchMode.GREATER_THAN, FilterMatchMode.GREATER_THAN_OR_EQUAL_TO],\n  date: [FilterMatchMode.DATE_IS, FilterMatchMode.DATE_IS_NOT, FilterMatchMode.DATE_BEFORE, FilterMatchMode.DATE_AFTER]\n});\n\nvar locales = {\n  en: {\n    startsWith: 'Starts with',\n    contains: 'Contains',\n    notContains: 'Not contains',\n    endsWith: 'Ends with',\n    equals: 'Equals',\n    notEquals: 'Not equals',\n    noFilter: 'No Filter',\n    filter: 'Filter',\n    lt: 'Less than',\n    lte: 'Less than or equal to',\n    gt: 'Greater than',\n    gte: 'Greater than or equal to',\n    dateIs: 'Date is',\n    dateIsNot: 'Date is not',\n    dateBefore: 'Date is before',\n    dateAfter: 'Date is after',\n    custom: 'Custom',\n    clear: 'Clear',\n    close: 'Close',\n    apply: 'Apply',\n    matchAll: 'Match All',\n    matchAny: 'Match Any',\n    addRule: 'Add Rule',\n    removeRule: 'Remove Rule',\n    accept: 'Yes',\n    reject: 'No',\n    choose: 'Choose',\n    upload: 'Upload',\n    cancel: 'Cancel',\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    today: 'Today',\n    weekHeader: 'Wk',\n    firstDayOfWeek: 0,\n    dateFormat: 'mm/dd/yy',\n    weak: 'Weak',\n    medium: 'Medium',\n    strong: 'Strong',\n    passwordPrompt: 'Enter a password',\n    emptyFilterMessage: 'No available options',\n    emptyMessage: 'No results found',\n    aria: {\n      trueLabel: 'True',\n      falseLabel: 'False',\n      nullLabel: 'Not Selected',\n      pageLabel: 'Page',\n      firstPageLabel: 'First Page',\n      lastPageLabel: 'Last Page',\n      nextPageLabel: 'Next Page',\n      previousPageLabel: 'Previous Page',\n      selectLabel: 'Select',\n      unselectLabel: 'Unselect',\n      expandLabel: 'Expand',\n      collapseLabel: 'Collapse'\n    }\n  }\n};\n\nfunction localeOption(key, locale) {\n  var _locale = locale || PrimeReact.locale;\n\n  try {\n    return localeOptions(_locale)[key];\n  } catch (error) {\n    throw new Error(\"The \".concat(key, \" option is not found in the current locale('\").concat(_locale, \"').\"));\n  }\n}\n\nfunction localeOptions(locale) {\n  var _locale = locale || PrimeReact.locale;\n\n  return locales[_locale];\n}\n\nvar ToastMessage =\n/*#__PURE__*/\nReact.memo(\n/*#__PURE__*/\nReact.forwardRef(function (props, ref) {\n  var messageInfo = props.messageInfo;\n  var _messageInfo$message = messageInfo.message,\n      severity = _messageInfo$message.severity,\n      content = _messageInfo$message.content,\n      summary = _messageInfo$message.summary,\n      detail = _messageInfo$message.detail,\n      closable = _messageInfo$message.closable,\n      life = _messageInfo$message.life,\n      sticky = _messageInfo$message.sticky,\n      _className = _messageInfo$message.className,\n      style = _messageInfo$message.style,\n      _contentClassName = _messageInfo$message.contentClassName,\n      contentStyle = _messageInfo$message.contentStyle;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var _useTimeout = useTimeout(function () {\n    onClose();\n  }, life || 3000, !sticky && !focused),\n      _useTimeout2 = _slicedToArray(_useTimeout, 1),\n      clearTimer = _useTimeout2[0];\n\n  var onClose = function onClose() {\n    clearTimer();\n    props.onClose && props.onClose(messageInfo);\n  };\n\n  var onClick = function onClick(event) {\n    if (props.onClick && !(DomHandler.hasClass(event.target, 'p-toast-icon-close') || DomHandler.hasClass(event.target, 'p-toast-icon-close-icon'))) {\n      props.onClick(messageInfo.message);\n    }\n  };\n\n  var onMouseEnter = function onMouseEnter(event) {\n    props.onMouseEnter && props.onMouseEnter(event); // do not continue if the user has canceled the event\n\n    if (event.defaultPrevented) {\n      return;\n    } // stop timer while user has focused message\n\n\n    if (!sticky) {\n      clearTimer();\n      setFocused(true);\n    }\n  };\n\n  var onMouseLeave = function onMouseLeave(event) {\n    props.onMouseLeave && props.onMouseLeave(event); // do not continue if the user has canceled the event\n\n    if (event.defaultPrevented) {\n      return;\n    } // restart timer when user has left message\n\n\n    if (!sticky) {\n      setFocused(false);\n    }\n  };\n\n  var createCloseIcon = function createCloseIcon() {\n    if (closable !== false) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"div\", null,\n        /*#__PURE__*/\n        React.createElement(\"button\", {\n          type: \"button\",\n          className: \"p-toast-icon-close p-link\",\n          onClick: onClose,\n          \"aria-label\": localeOption('close')\n        },\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          className: \"p-toast-icon-close-icon pi pi-times\",\n          \"aria-hidden\": \"true\"\n        }),\n        /*#__PURE__*/\n        React.createElement(Ripple, null)))\n      );\n    }\n\n    return null;\n  };\n\n  var createMessage = function createMessage() {\n    if (messageInfo) {\n      var contentEl = ObjectUtils.getJSXElement(content, {\n        message: messageInfo.message,\n        onClick: onClick,\n        onClose: onClose\n      });\n      var iconClassName = classNames('p-toast-message-icon pi', {\n        'pi-info-circle': severity === 'info',\n        'pi-exclamation-triangle': severity === 'warn',\n        'pi-times': severity === 'error',\n        'pi-check': severity === 'success'\n      });\n      return contentEl ||\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null,\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: iconClassName\n      }),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"p-toast-message-text\"\n      },\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        className: \"p-toast-summary\"\n      }, summary), detail &&\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        className: \"p-toast-detail\"\n      }, detail)));\n    }\n\n    return null;\n  };\n\n  var className = classNames('p-toast-message', _defineProperty({}, \"p-toast-message-\".concat(severity), severity), _className);\n  var contentClassName = classNames('p-toast-message-content', _contentClassName);\n  var message = createMessage();\n  var closeIcon = createCloseIcon();\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      ref: ref,\n      className: className,\n      style: style,\n      role: \"alert\",\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\",\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: contentClassName,\n      style: contentStyle\n    }, message, closeIcon))\n  );\n}));\nToastMessage.displayName = 'ToastMessage';\nvar messageIdx = 0;\nvar Toast =\n/*#__PURE__*/\nReact.memo(\n/*#__PURE__*/\nReact.forwardRef(function (props, ref) {\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      messagesState = _React$useState2[0],\n      setMessagesState = _React$useState2[1];\n\n  var containerRef = React.useRef(null);\n\n  var show = function show(messageInfo) {\n    if (messageInfo) {\n      var messages = assignIdentifiers(messageInfo, true);\n      messagesState.length === 0 && ZIndexUtils.set('toast', containerRef.current, PrimeReact$1.autoZIndex, props.baseZIndex || PrimeReact$1.zIndex['toast']);\n      setMessagesState(messages);\n    }\n  };\n\n  var assignIdentifiers = function assignIdentifiers(messageInfo, copy) {\n    var messages;\n\n    if (Array.isArray(messageInfo)) {\n      var multipleMessages = messageInfo.reduce(function (acc, message) {\n        acc.push({\n          _pId: messageIdx++,\n          message: message\n        });\n        return acc;\n      }, []);\n\n      if (copy) {\n        messages = messagesState ? [].concat(_toConsumableArray(messagesState), _toConsumableArray(multipleMessages)) : multipleMessages;\n      } else {\n        messages = multipleMessages;\n      }\n    } else {\n      var message = {\n        _pId: messageIdx++,\n        message: messageInfo\n      };\n\n      if (copy) {\n        messages = messagesState ? [].concat(_toConsumableArray(messagesState), [message]) : [message];\n      } else {\n        messages = [message];\n      }\n    }\n\n    return messages;\n  };\n\n  var clear = function clear() {\n    ZIndexUtils.clear(containerRef.current);\n    setMessagesState([]);\n  };\n\n  var replace = function replace(messageInfo) {\n    var replaced = assignIdentifiers(messageInfo, false);\n    setMessagesState(replaced);\n  };\n\n  var remove = function remove(messageInfo) {\n    var messages = messagesState.filter(function (msg) {\n      return msg._pId !== messageInfo._pId;\n    });\n    setMessagesState(messages);\n    props.onRemove && props.onRemove(messageInfo.message);\n  };\n\n  var onClose = function onClose(messageInfo) {\n    remove(messageInfo);\n  };\n\n  var onEntered = function onEntered() {\n    props.onShow && props.onShow();\n  };\n\n  var onExited = function onExited() {\n    messagesState.length === 1 && ZIndexUtils.clear(containerRef.current);\n    props.onHide && props.onHide();\n  };\n\n  useUnmountEffect(function () {\n    ZIndexUtils.clear(containerRef.current);\n  });\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      show: show,\n      replace: replace,\n      remove: remove,\n      clear: clear,\n      getElement: function getElement() {\n        return containerRef.current;\n      }\n    };\n  });\n\n  var createElement = function createElement() {\n    var otherProps = ObjectUtils.findDiffKeys(props, Toast.defaultProps);\n    var className = classNames('p-toast p-component p-toast-' + props.position, props.className, {\n      'p-input-filled': PrimeReact$1.inputStyle === 'filled',\n      'p-ripple-disabled': PrimeReact$1.ripple === false\n    });\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", _extends({\n        ref: containerRef,\n        id: props.id,\n        className: className,\n        style: props.style\n      }, otherProps),\n      /*#__PURE__*/\n      React.createElement(TransitionGroup, null, messagesState && messagesState.map(function (messageInfo) {\n        var messageRef =\n        /*#__PURE__*/\n        React.createRef();\n        return (\n          /*#__PURE__*/\n          React.createElement(CSSTransition, {\n            nodeRef: messageRef,\n            key: messageInfo._pId,\n            classNames: \"p-toast-message\",\n            unmountOnExit: true,\n            timeout: {\n              enter: 300,\n              exit: 300\n            },\n            onEntered: onEntered,\n            onExited: onExited,\n            options: props.transitionOptions\n          },\n          /*#__PURE__*/\n          React.createElement(ToastMessage, {\n            ref: messageRef,\n            messageInfo: messageInfo,\n            onClick: props.onClick,\n            onClose: onClose,\n            onMouseEnter: props.onMouseEnter,\n            onMouseLeave: props.onMouseLeave\n          }))\n        );\n      })))\n    );\n  };\n\n  var element = createElement();\n  return (\n    /*#__PURE__*/\n    React.createElement(Portal, {\n      element: element,\n      appendTo: props.appendTo\n    })\n  );\n}));\nToast.displayName = 'Toast';\nToast.defaultProps = {\n  __TYPE: 'Toast',\n  id: null,\n  className: null,\n  style: null,\n  baseZIndex: 0,\n  position: 'top-right',\n  transitionOptions: null,\n  appendTo: 'self',\n  onClick: null,\n  onRemove: null,\n  onShow: null,\n  onHide: null,\n  onMouseEnter: null,\n  onMouseLeave: null\n};\nexport { Toast };","map":null,"metadata":{},"sourceType":"module"}