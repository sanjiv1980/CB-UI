{"ast":null,"code":"import * as React from 'react';\nimport { usePrevious, useResizeListener, useEventListener, useMountEffect, useUpdateEffect } from 'primereact/hooks';\nimport { DomHandler, ObjectUtils, classNames } from 'primereact/utils';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (null != _i) {\n    var _s,\n        _e,\n        _x,\n        _r,\n        _arr = [],\n        _n = !0,\n        _d = !1;\n\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) {\n        ;\n      }\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar VirtualScroller =\n/*#__PURE__*/\nReact.memo(\n/*#__PURE__*/\nReact.forwardRef(function (props, ref) {\n  var vertical = props.orientation === 'vertical';\n  var horizontal = props.orientation === 'horizontal';\n  var both = props.orientation === 'both';\n\n  var _React$useState = React.useState(both ? {\n    rows: 0,\n    cols: 0\n  } : 0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      firstState = _React$useState2[0],\n      setFirstState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(both ? {\n    rows: 0,\n    cols: 0\n  } : 0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastState = _React$useState4[0],\n      setLastState = _React$useState4[1];\n\n  var _React$useState5 = React.useState(both ? {\n    rows: 0,\n    cols: 0\n  } : 0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      numItemsInViewportState = _React$useState6[0],\n      setNumItemsInViewportState = _React$useState6[1];\n\n  var _React$useState7 = React.useState(props.numToleratedItems),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      numToleratedItemsState = _React$useState8[0],\n      setNumToleratedItemsState = _React$useState8[1];\n\n  var _React$useState9 = React.useState(props.loading || false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      loadingState = _React$useState10[0],\n      setLoadingState = _React$useState10[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      loaderArrState = _React$useState12[0],\n      setLoaderArrState = _React$useState12[1];\n\n  var elementRef = React.useRef(null);\n\n  var _contentRef = React.useRef(null);\n\n  var _spacerRef = React.useRef(null);\n\n  var _stickyRef = React.useRef(null);\n\n  var lastScrollPos = React.useRef(both ? {\n    top: 0,\n    left: 0\n  } : 0);\n  var scrollTimeout = React.useRef(null);\n  var resizeTimeout = React.useRef(null);\n  var defaultWidth = React.useRef(null);\n  var defaultHeight = React.useRef(null);\n  var prevItems = usePrevious(props.items);\n  var prevLoading = usePrevious(props.loading);\n\n  var _useResizeListener = useResizeListener({\n    listener: function listener(event) {\n      return onResize();\n    }\n  }),\n      _useResizeListener2 = _slicedToArray(_useResizeListener, 1),\n      bindWindowResizeListener = _useResizeListener2[0];\n\n  var _useEventListener = useEventListener({\n    target: 'window',\n    type: 'orientationchange',\n    listener: function listener(event) {\n      return onResize();\n    }\n  }),\n      _useEventListener2 = _slicedToArray(_useEventListener, 1),\n      bindOrientationChangeListener = _useEventListener2[0];\n\n  var getElementRef = function getElementRef() {\n    return elementRef;\n  };\n\n  var scrollTo = function scrollTo(options) {\n    lastScrollPos.current = both ? {\n      top: 0,\n      left: 0\n    } : 0;\n    elementRef.current && elementRef.current.scrollTo(options);\n  };\n\n  var scrollToIndex = function scrollToIndex(index) {\n    var behavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';\n\n    var _calculateNumItems = calculateNumItems(),\n        numToleratedItems = _calculateNumItems.numToleratedItems;\n\n    var calculateFirst = function calculateFirst() {\n      var _index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var _numT = arguments.length > 1 ? arguments[1] : undefined;\n\n      return _index <= _numT ? 0 : _index;\n    };\n\n    var calculateCoord = function calculateCoord(_first, _size) {\n      return _first * _size;\n    };\n\n    var scrollToItem = function scrollToItem() {\n      var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return scrollTo({\n        left: left,\n        top: top,\n        behavior: behavior\n      });\n    };\n\n    if (both) {\n      var newFirst = {\n        rows: calculateFirst(index[0], numToleratedItems[0]),\n        cols: calculateFirst(index[1], numToleratedItems[1])\n      };\n\n      if (newFirst.rows !== firstState.rows || newFirst.cols !== firstState.cols) {\n        scrollToItem(calculateCoord(newFirst.cols, props.itemSize[1]), calculateCoord(newFirst.rows, props.itemSize[0]));\n      }\n    } else {\n      var _newFirst = calculateFirst(index, numToleratedItems);\n\n      if (_newFirst !== firstState) {\n        horizontal ? scrollToItem(calculateCoord(_newFirst, props.itemSize), 0) : scrollToItem(0, calculateCoord(_newFirst, props.itemSize));\n      }\n    }\n  };\n\n  var scrollInView = function scrollInView(index, to) {\n    var behavior = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'auto';\n\n    if (to) {\n      var _getRenderedRange = getRenderedRange(),\n          first = _getRenderedRange.first,\n          viewport = _getRenderedRange.viewport;\n\n      var scrollToItem = function scrollToItem() {\n        var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        return scrollTo({\n          left: left,\n          top: top,\n          behavior: behavior\n        });\n      };\n\n      var isToStart = to === 'to-start';\n      var isToEnd = to === 'to-end';\n\n      if (isToStart) {\n        if (both) {\n          if (viewport.first.rows - first.rows > index[0]) {\n            scrollToItem(viewport.first.cols * props.itemSize[1], (viewport.first.rows - 1) * props.itemSize[0]);\n          } else if (viewport.first.cols - first.cols > index[1]) {\n            scrollToItem((viewport.first.cols - 1) * props.itemSize[1], viewport.first.rows * props.itemSize[0]);\n          }\n        } else {\n          if (viewport.first - first > index) {\n            var pos = (viewport.first - 1) * props.itemSize;\n            horizontal ? scrollToItem(pos, 0) : scrollToItem(0, pos);\n          }\n        }\n      } else if (isToEnd) {\n        if (both) {\n          if (viewport.last.rows - first.rows <= index[0] + 1) {\n            scrollToItem(viewport.first.cols * props.itemSize[1], (viewport.first.rows + 1) * props.itemSize[0]);\n          } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n            scrollToItem((viewport.first.cols + 1) * props.itemSize[1], viewport.first.rows * props.itemSize[0]);\n          }\n        } else {\n          if (viewport.last - first <= index + 1) {\n            var _pos2 = (viewport.first + 1) * props.itemSize;\n\n            horizontal ? scrollToItem(_pos2, 0) : scrollToItem(0, _pos2);\n          }\n        }\n      }\n    } else {\n      scrollToIndex(index, behavior);\n    }\n  };\n\n  var getRows = function getRows() {\n    return loadingState ? props.loaderDisabled ? loaderArrState : [] : loadedItems();\n  };\n\n  var getColumns = function getColumns() {\n    if (props.columns && both || horizontal) {\n      return loadingState && props.loaderDisabled ? both ? loaderArrState[0] : loaderArrState : props.columns.slice(both ? firstState.cols : firstState, both ? lastState.cols : lastState);\n    }\n\n    return props.columns;\n  };\n\n  var getRenderedRange = function getRenderedRange() {\n    var calculateFirstInViewport = function calculateFirstInViewport(_pos, _size) {\n      return Math.floor(_pos / (_size || _pos));\n    };\n\n    var firstInViewport = firstState;\n    var lastInViewport = 0;\n\n    if (elementRef.current) {\n      var _elementRef$current = elementRef.current,\n          scrollTop = _elementRef$current.scrollTop,\n          scrollLeft = _elementRef$current.scrollLeft;\n\n      if (both) {\n        firstInViewport = {\n          rows: calculateFirstInViewport(scrollTop, props.itemSize[0]),\n          cols: calculateFirstInViewport(scrollLeft, props.itemSize[1])\n        };\n        lastInViewport = {\n          rows: firstInViewport.rows + numItemsInViewportState.rows,\n          cols: firstInViewport.cols + numItemsInViewportState.cols\n        };\n      } else {\n        var scrollPos = horizontal ? scrollLeft : scrollTop;\n        firstInViewport = calculateFirstInViewport(scrollPos, props.itemSize);\n        lastInViewport = firstInViewport + numItemsInViewportState;\n      }\n    }\n\n    return {\n      first: firstState,\n      last: lastState,\n      viewport: {\n        first: firstInViewport,\n        last: lastInViewport\n      }\n    };\n  };\n\n  var calculateNumItems = function calculateNumItems() {\n    var contentPos = getContentPosition();\n    var contentWidth = elementRef.current ? elementRef.current.offsetWidth - contentPos.left : 0;\n    var contentHeight = elementRef.current ? elementRef.current.offsetHeight - contentPos.top : 0;\n\n    var calculateNumItemsInViewport = function calculateNumItemsInViewport(_contentSize, _itemSize) {\n      return Math.ceil(_contentSize / (_itemSize || _contentSize));\n    };\n\n    var calculateNumToleratedItems = function calculateNumToleratedItems(_numItems) {\n      return Math.ceil(_numItems / 2);\n    };\n\n    var numItemsInViewport = both ? {\n      rows: calculateNumItemsInViewport(contentHeight, props.itemSize[0]),\n      cols: calculateNumItemsInViewport(contentWidth, props.itemSize[1])\n    } : calculateNumItemsInViewport(horizontal ? contentWidth : contentHeight, props.itemSize);\n    var numToleratedItems = numToleratedItemsState || (both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n    return {\n      numItemsInViewport: numItemsInViewport,\n      numToleratedItems: numToleratedItems\n    };\n  };\n\n  var calculateOptions = function calculateOptions() {\n    var _calculateNumItems2 = calculateNumItems(),\n        numItemsInViewport = _calculateNumItems2.numItemsInViewport,\n        numToleratedItems = _calculateNumItems2.numToleratedItems;\n\n    var calculateLast = function calculateLast(_first, _num, _numT, _isCols) {\n      return getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n    };\n\n    var last = both ? {\n      rows: calculateLast(firstState.rows, numItemsInViewport.rows, numToleratedItems[0]),\n      cols: calculateLast(firstState.cols, numItemsInViewport.cols, numToleratedItems[1], true)\n    } : calculateLast(firstState, numItemsInViewport, numToleratedItems);\n    setNumItemsInViewportState(numItemsInViewport);\n    setNumToleratedItemsState(numToleratedItems);\n    setLastState(last);\n\n    if (props.showLoader) {\n      setLoaderArrState(both ? Array.from({\n        length: numItemsInViewport.rows\n      }).map(function () {\n        return Array.from({\n          length: numItemsInViewport.cols\n        });\n      }) : Array.from({\n        length: numItemsInViewport\n      }));\n    }\n\n    if (props.lazy) {\n      props.onLazyLoad && props.onLazyLoad({\n        first: firstState,\n        last: last\n      });\n    }\n  };\n\n  var calculateAutoSize = function calculateAutoSize(loading) {\n    if (props.autoSize && !loading) {\n      Promise.resolve().then(function () {\n        if (_contentRef.current) {\n          _contentRef.current.style.minHeight = _contentRef.current.style.minWidth = 'auto';\n          var _contentRef$current = _contentRef.current,\n              offsetWidth = _contentRef$current.offsetWidth,\n              offsetHeight = _contentRef$current.offsetHeight;\n          (both || horizontal) && (elementRef.current.style.width = (offsetWidth < defaultWidth.current ? offsetWidth : defaultWidth.current) + 'px');\n          (both || vertical) && (elementRef.current.style.height = (offsetHeight < defaultHeight.current ? offsetHeight : defaultHeight.current) + 'px');\n          _contentRef.current.style.minHeight = _contentRef.current.style.minWidth = '';\n        }\n      });\n    }\n  };\n\n  var getLast = function getLast() {\n    var last = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var isCols = arguments.length > 1 ? arguments[1] : undefined;\n    return props.items ? Math.min(isCols ? (props.columns || props.items[0]).length : props.items.length, last) : 0;\n  };\n\n  var getContentPosition = function getContentPosition() {\n    if (_contentRef.current) {\n      var style = getComputedStyle(_contentRef.current);\n      var left = parseInt(style.paddingLeft, 10) + Math.max(parseInt(style.left, 10), 0);\n      var right = parseInt(style.paddingRight, 10) + Math.max(parseInt(style.right, 10), 0);\n      var top = parseInt(style.paddingTop, 10) + Math.max(parseInt(style.top, 10), 0);\n      var bottom = parseInt(style.paddingBottom, 10) + Math.max(parseInt(style.bottom, 10), 0);\n      return {\n        left: left,\n        right: right,\n        top: top,\n        bottom: bottom,\n        x: left + right,\n        y: top + bottom\n      };\n    }\n\n    return {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      x: 0,\n      y: 0\n    };\n  };\n\n  var setSize = function setSize() {\n    if (elementRef.current) {\n      var parentElement = elementRef.current.parentElement;\n      var width = props.scrollWidth || \"\".concat(elementRef.current.offsetWidth || parentElement.offsetWidth, \"px\");\n      var height = props.scrollHeight || \"\".concat(elementRef.current.offsetHeight || parentElement.offsetHeight, \"px\");\n\n      var setProp = function setProp(_name, _value) {\n        return elementRef.current.style[_name] = _value;\n      };\n\n      if (both || horizontal) {\n        setProp('height', height);\n        setProp('width', width);\n      } else {\n        setProp('height', height);\n      }\n    }\n  };\n\n  var setSpacerSize = function setSpacerSize() {\n    var items = props.items;\n\n    if (_spacerRef.current && items) {\n      var contentPos = getContentPosition();\n\n      var setProp = function setProp(_name, _value, _size) {\n        var _cpos = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n        return _spacerRef.current.style[_name] = (_value || []).length * _size + _cpos + 'px';\n      };\n\n      if (both) {\n        setProp('height', items, props.itemSize[0], contentPos.y);\n        setProp('width', props.columns || items[1], props.itemSize[1], contentPos.x);\n      } else {\n        horizontal ? setProp('width', props.columns || items, props.itemSize, contentPos.x) : setProp('height', items, props.itemSize, contentPos.y);\n      }\n    }\n  };\n\n  var setContentPosition = function setContentPosition(pos) {\n    if (_contentRef.current) {\n      var first = pos ? pos.first : firstState;\n\n      var calculateTranslateVal = function calculateTranslateVal(_first, _size) {\n        return _first * _size;\n      };\n\n      var setTransform = function setTransform() {\n        var _x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n        var _y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n        _stickyRef.current && (_stickyRef.current.style.top = \"-\".concat(_y, \"px\"));\n        _contentRef.current.style.transform = \"translate3d(\".concat(_x, \"px, \").concat(_y, \"px, 0)\");\n      };\n\n      if (both) {\n        setTransform(calculateTranslateVal(first.cols, props.itemSize[1]), calculateTranslateVal(first.rows, props.itemSize[0]));\n      } else {\n        var translateVal = calculateTranslateVal(first, props.itemSize);\n        horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n      }\n    }\n  };\n\n  var onScrollPositionChange = function onScrollPositionChange(event) {\n    var target = event.target;\n    var contentPos = getContentPosition();\n\n    var calculateScrollPos = function calculateScrollPos(_pos, _cpos) {\n      return _pos ? _pos > _cpos ? _pos - _cpos : _pos : 0;\n    };\n\n    var calculateCurrentIndex = function calculateCurrentIndex(_pos, _size) {\n      return Math.floor(_pos / (_size || _pos));\n    };\n\n    var calculateTriggerIndex = function calculateTriggerIndex(_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) {\n      return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n    };\n\n    var calculateFirst = function calculateFirst(_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) {\n      if (_currentIndex <= _numT) return 0;else return Math.max(0, _isScrollDownOrRight ? _currentIndex < _triggerIndex ? _first : _currentIndex - _numT : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n    };\n\n    var calculateLast = function calculateLast(_currentIndex, _first, _last, _num, _numT, _isCols) {\n      var lastValue = _first + _num + 2 * _numT;\n\n      if (_currentIndex >= _numT) {\n        lastValue += _numT + 1;\n      }\n\n      return getLast(lastValue, _isCols);\n    };\n\n    var scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n    var scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n    var newFirst = both ? {\n      rows: 0,\n      cols: 0\n    } : 0;\n    var newLast = lastState;\n    var isRangeChanged = false;\n    var newScrollPos = lastScrollPos.current;\n\n    if (both) {\n      var isScrollDown = lastScrollPos.current.top <= scrollTop;\n      var isScrollRight = lastScrollPos.current.left <= scrollLeft;\n      var currentIndex = {\n        rows: calculateCurrentIndex(scrollTop, props.itemSize[0]),\n        cols: calculateCurrentIndex(scrollLeft, props.itemSize[1])\n      };\n      var triggerIndex = {\n        rows: calculateTriggerIndex(currentIndex.rows, firstState.rows, lastState.rows, numItemsInViewportState.rows, numToleratedItemsState[0], isScrollDown),\n        cols: calculateTriggerIndex(currentIndex.cols, firstState.cols, lastState.cols, numItemsInViewportState.cols, numToleratedItemsState[1], isScrollRight)\n      };\n      newFirst = {\n        rows: calculateFirst(currentIndex.rows, triggerIndex.rows, firstState.rows, lastState.rows, numItemsInViewportState.rows, numToleratedItemsState[0], isScrollDown),\n        cols: calculateFirst(currentIndex.cols, triggerIndex.cols, firstState.cols, lastState.cols, numItemsInViewportState.cols, numToleratedItemsState[1], isScrollRight)\n      };\n      newLast = {\n        rows: calculateLast(currentIndex.rows, newFirst.rows, lastState.rows, numItemsInViewportState.rows, numToleratedItemsState[0]),\n        cols: calculateLast(currentIndex.cols, newFirst.cols, lastState.cols, numItemsInViewportState.cols, numToleratedItemsState[1], true)\n      };\n      isRangeChanged = newFirst.rows !== firstState.rows || newLast.rows !== lastState.rows || newFirst.cols !== firstState.cols || newLast.cols !== lastState.cols;\n      newScrollPos = {\n        top: scrollTop,\n        left: scrollLeft\n      };\n    } else {\n      var scrollPos = horizontal ? scrollLeft : scrollTop;\n      var isScrollDownOrRight = lastScrollPos.current <= scrollPos;\n\n      var _currentIndex2 = calculateCurrentIndex(scrollPos, props.itemSize);\n\n      var _triggerIndex2 = calculateTriggerIndex(_currentIndex2, firstState, lastState, numItemsInViewportState, numToleratedItemsState, isScrollDownOrRight);\n\n      newFirst = calculateFirst(_currentIndex2, _triggerIndex2, firstState, lastState, numItemsInViewportState, numToleratedItemsState, isScrollDownOrRight);\n      newLast = calculateLast(_currentIndex2, newFirst, lastState, numItemsInViewportState, numToleratedItemsState);\n      isRangeChanged = newFirst !== firstState || newLast !== lastState;\n      newScrollPos = scrollPos;\n    }\n\n    return {\n      first: newFirst,\n      last: newLast,\n      isRangeChanged: isRangeChanged,\n      scrollPos: newScrollPos\n    };\n  };\n\n  var onScrollChange = function onScrollChange(event) {\n    var _onScrollPositionChan = onScrollPositionChange(event),\n        first = _onScrollPositionChan.first,\n        last = _onScrollPositionChan.last,\n        isRangeChanged = _onScrollPositionChan.isRangeChanged,\n        scrollPos = _onScrollPositionChan.scrollPos;\n\n    if (isRangeChanged) {\n      var newState = {\n        first: first,\n        last: last\n      };\n      setContentPosition(newState);\n      setFirstState(first);\n      setLastState(last);\n      lastScrollPos.current = scrollPos;\n      props.onScrollIndexChange && props.onScrollIndexChange(newState);\n\n      if (props.lazy) {\n        props.onLazyLoad && props.onLazyLoad(newState);\n      }\n    }\n  };\n\n  var onScroll = function onScroll(event) {\n    props.onScroll && props.onScroll(event);\n\n    if (props.delay) {\n      if (scrollTimeout.current) {\n        clearTimeout(scrollTimeout.current);\n      }\n\n      if (!loadingState && props.showLoader) {\n        var _onScrollPositionChan2 = onScrollPositionChange(event),\n            changed = _onScrollPositionChan2.isRangeChanged;\n\n        changed && setLoadingState(true);\n      }\n\n      scrollTimeout.current = setTimeout(function () {\n        onScrollChange(event);\n\n        if (loadingState && props.showLoader && (!props.lazy || props.loading === undefined)) {\n          setLoadingState(false);\n        }\n      }, props.delay);\n    } else {\n      onScrollChange(event);\n    }\n  };\n\n  var onResize = function onResize() {\n    if (resizeTimeout.current) {\n      clearTimeout(resizeTimeout.current);\n    }\n\n    resizeTimeout.current = setTimeout(function () {\n      if (elementRef.current) {\n        var _ref = [DomHandler.getWidth(elementRef.current), DomHandler.getHeight(elementRef.current)],\n            width = _ref[0],\n            height = _ref[1];\n        var isDiffWidth = width !== defaultWidth.current,\n            isDiffHeight = height !== defaultHeight.current;\n        var reinit = both ? isDiffWidth || isDiffHeight : horizontal ? isDiffWidth : vertical ? isDiffHeight : false;\n\n        if (reinit) {\n          setNumToleratedItemsState(props.numToleratedItems);\n          defaultWidth.current = width;\n          defaultHeight.current = height;\n        }\n      }\n    }, props.resizeDelay);\n  };\n\n  var getOptions = function getOptions(renderedIndex) {\n    var count = (props.items || []).length;\n    var index = both ? firstState.rows + renderedIndex : firstState + renderedIndex;\n    return {\n      index: index,\n      count: count,\n      first: index === 0,\n      last: index === count - 1,\n      even: index % 2 === 0,\n      odd: index % 2 !== 0,\n      props: props\n    };\n  };\n\n  var loaderOptions = function loaderOptions(index, extOptions) {\n    var count = loaderArrState.length;\n    return _objectSpread({\n      index: index,\n      count: count,\n      first: index === 0,\n      last: index === count - 1,\n      even: index % 2 === 0,\n      odd: index % 2 !== 0,\n      props: props\n    }, extOptions);\n  };\n\n  var loadedItems = function loadedItems() {\n    var items = props.items;\n\n    if (items && !loadingState) {\n      if (both) return items.slice(firstState.rows, lastState.rows).map(function (item) {\n        return props.columns ? item : item.slice(firstState.cols, lastState.cols);\n      });else if (horizontal && props.columns) return items;else return items.slice(firstState, lastState);\n    }\n\n    return [];\n  };\n\n  var init = function init() {\n    if (!props.disabled) {\n      setSize();\n      calculateOptions();\n      setSpacerSize();\n    }\n  };\n\n  useMountEffect(function () {\n    if (!props.disabled) {\n      init();\n      bindWindowResizeListener();\n      bindOrientationChangeListener();\n      defaultWidth.current = DomHandler.getWidth(elementRef.current);\n      defaultHeight.current = DomHandler.getHeight(elementRef.current);\n    }\n  });\n  useUpdateEffect(function () {\n    init();\n  }, [props.itemSize, props.scrollHeight]);\n  useUpdateEffect(function () {\n    if (props.numToleratedItems !== numToleratedItemsState) {\n      setNumToleratedItemsState(props.numToleratedItems);\n    }\n  }, [props.numToleratedItems]);\n  useUpdateEffect(function () {\n    if (props.numToleratedItems === numToleratedItemsState) {\n      init(); // reinit after resizing\n    }\n  }, [numToleratedItemsState]);\n  useUpdateEffect(function () {\n    if (!prevItems || prevItems.length !== (props.items || []).length) {\n      init();\n    }\n\n    var loading = loadingState;\n\n    if (props.lazy && prevLoading !== props.loading && props.loading !== loadingState) {\n      setLoadingState(props.loading);\n      loading = props.loading;\n    }\n\n    calculateAutoSize(loading);\n  });\n  useUpdateEffect(function () {\n    lastScrollPos.current = both ? {\n      top: 0,\n      left: 0\n    } : 0;\n  }, [props.orientation]);\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElementRef: getElementRef,\n      scrollTo: scrollTo,\n      scrollToIndex: scrollToIndex,\n      scrollInView: scrollInView,\n      getRenderedRange: getRenderedRange\n    };\n  });\n\n  var createLoaderItem = function createLoaderItem(index) {\n    var extOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var options = loaderOptions(index, extOptions);\n    var content = ObjectUtils.getJSXElement(props.loadingTemplate, options);\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        key: index\n      }, content)\n    );\n  };\n\n  var createLoader = function createLoader() {\n    if (!props.loaderDisabled && props.showLoader && loadingState) {\n      var className = classNames('p-virtualscroller-loader', {\n        'p-component-overlay': !props.loadingTemplate\n      });\n      var content =\n      /*#__PURE__*/\n      React.createElement(\"i\", {\n        className: \"p-virtualscroller-loading-icon pi pi-spinner pi-spin\"\n      });\n\n      if (props.loadingTemplate) {\n        content = loaderArrState.map(function (_, index) {\n          return createLoaderItem(index, both && {\n            numCols: numItemsInViewportState.cols\n          });\n        });\n      } else if (props.loaderIconTemplate) {\n        var defaultContentOptions = {\n          className: 'p-virtualscroller-loading-icon',\n          element: content,\n          props: props\n        };\n        content = ObjectUtils.getJSXElement(props.loaderIconTemplate, defaultContentOptions);\n      }\n\n      return (\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: className\n        }, content)\n      );\n    }\n\n    return null;\n  };\n\n  var createSpacer = function createSpacer() {\n    if (props.showSpacer) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          ref: _spacerRef,\n          className: \"p-virtualscroller-spacer\"\n        })\n      );\n    }\n\n    return null;\n  };\n\n  var createItem = function createItem(item, index) {\n    var options = getOptions(index);\n    var content = ObjectUtils.getJSXElement(props.itemTemplate, item, options);\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, {\n        key: options.index\n      }, content)\n    );\n  };\n\n  var createItems = function createItems() {\n    var items = loadedItems();\n    return items.map(createItem);\n  };\n\n  var createContent = function createContent() {\n    var items = createItems();\n    var className = classNames('p-virtualscroller-content', {\n      'p-virtualscroller-loading': loadingState\n    });\n    var content =\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      ref: _contentRef,\n      className: className\n    }, items);\n\n    if (props.contentTemplate) {\n      var defaultOptions = {\n        className: className,\n        contentRef: function contentRef(el) {\n          return _contentRef.current = ObjectUtils.getRefElement(el);\n        },\n        spacerRef: function spacerRef(el) {\n          return _spacerRef.current = ObjectUtils.getRefElement(el);\n        },\n        stickyRef: function stickyRef(el) {\n          return _stickyRef.current = ObjectUtils.getRefElement(el);\n        },\n        items: loadedItems(),\n        getItemOptions: function getItemOptions(index) {\n          return getOptions(index);\n        },\n        children: items,\n        element: content,\n        props: props,\n        loading: loadingState,\n        getLoaderOptions: function getLoaderOptions(index, ext) {\n          return loaderOptions(index, ext);\n        },\n        loadingTemplate: props.loadingTemplate,\n        itemSize: props.itemSize,\n        rows: getRows(),\n        columns: getColumns(),\n        vertical: vertical,\n        horizontal: horizontal,\n        both: both\n      };\n      return ObjectUtils.getJSXElement(props.contentTemplate, defaultOptions);\n    }\n\n    return content;\n  };\n\n  if (props.disabled) {\n    var content = ObjectUtils.getJSXElement(props.contentTemplate, {\n      items: props.items,\n      rows: props.items,\n      columns: props.columns\n    });\n    return (\n      /*#__PURE__*/\n      React.createElement(React.Fragment, null, props.children, content)\n    );\n  } else {\n    var otherProps = ObjectUtils.findDiffKeys(props, VirtualScroller.defaultProps);\n    var className = classNames('p-virtualscroller', {\n      'p-both-scroll': both,\n      'p-horizontal-scroll': horizontal\n    }, props.className);\n    var loader = createLoader();\n\n    var _content = createContent();\n\n    var spacer = createSpacer();\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", _extends({\n        ref: elementRef,\n        className: className,\n        tabIndex: 0,\n        style: props.style\n      }, otherProps, {\n        onScroll: onScroll\n      }), _content, spacer, loader)\n    );\n  }\n}));\nVirtualScroller.displayName = 'VirtualScroller';\nVirtualScroller.defaultProps = {\n  __TYPE: 'VirtualScroller',\n  id: null,\n  style: null,\n  className: null,\n  items: null,\n  itemSize: 0,\n  scrollHeight: null,\n  scrollWidth: null,\n  orientation: 'vertical',\n  numToleratedItems: null,\n  delay: 0,\n  resizeDelay: 10,\n  lazy: false,\n  disabled: false,\n  loaderDisabled: false,\n  columns: null,\n  loading: undefined,\n  autoSize: false,\n  showSpacer: true,\n  showLoader: false,\n  loadingTemplate: null,\n  loaderIconTemplate: null,\n  itemTemplate: null,\n  contentTemplate: null,\n  onScroll: null,\n  onScrollIndexChange: null,\n  onLazyLoad: null\n};\nexport { VirtualScroller };","map":null,"metadata":{},"sourceType":"module"}