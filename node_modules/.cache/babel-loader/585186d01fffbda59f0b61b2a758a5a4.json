{"ast":null,"code":"import _slicedToArray from \"E:\\\\React\\\\cb-ui\\\\CB-UI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\React\\\\cb-ui\\\\CB-UI\\\\src\\\\app\\\\shared\\\\DrapDrop.js\";\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../assets/styles/drap-drop.scss';\nimport { ImageConfig } from '../config/imageConfig';\nimport uploadImg from '../../assets/images/upload/cloud-upload-regular-240.png';\n\nconst DropFileInput = props => {\n  const wrapperRef = useRef(null);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        fileList = _useState2[0],\n        setFileList = _useState2[1];\n\n  const onDragEnter = () => wrapperRef.current.classList.add('dragover');\n\n  const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\n\n  const onDrop = () => wrapperRef.current.classList.remove('dragover');\n\n  const onFileDrop = e => {\n    const newFile = e.target.files[0];\n\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n      props.onFileChange(updatedList);\n    }\n  };\n\n  const fileRemove = file => {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList);\n    props.onFileChange(updatedList);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: \"drop-file-input\",\n    onDragEnter: onDragEnter,\n    onDragLeave: onDragLeave,\n    onDrop: onDrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"drop-file-input__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: uploadImg,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Drag & Drop your files here\")), React.createElement(\"input\", {\n    type: \"file\",\n    value: \"\",\n    onChange: onFileDrop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), fileList.length > 0 ? React.createElement(\"div\", {\n    className: \"drop-file-preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"drop-file-preview__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Ready to upload\"), fileList.map((item, index) => React.createElement(\"div\", {\n    key: index,\n    className: \"drop-file-preview__item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: ImageConfig[item.type.split('/')[1]] || ImageConfig['default'],\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"drop-file-preview__item__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"font14\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, item.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"File Size:\", item.size, \"B\")), React.createElement(\"span\", {\n    className: \"drop-file-preview__item__del\",\n    onClick: () => fileRemove(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"x\")))) : null));\n};\n\nDropFileInput.propTypes = {\n  onFileChange: PropTypes.func\n};\nexport default DropFileInput;","map":{"version":3,"sources":["E:\\React\\cb-ui\\CB-UI\\src\\app\\shared\\DrapDrop.js"],"names":["React","useRef","useState","PropTypes","ImageConfig","uploadImg","DropFileInput","props","wrapperRef","fileList","setFileList","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","onFileDrop","e","newFile","target","files","updatedList","onFileChange","fileRemove","file","splice","indexOf","length","map","item","index","type","split","name","size","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../assets/styles/drap-drop.scss';\r\nimport { ImageConfig } from '../config/imageConfig'; \r\nimport uploadImg from '../../assets/images/upload/cloud-upload-regular-240.png';\r\n\r\nconst DropFileInput = props => {\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const onDragEnter = () => wrapperRef.current.classList.add('dragover');\r\n\r\n    const onDragLeave = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n    const onDrop = () => wrapperRef.current.classList.remove('dragover');\r\n\r\n    const onFileDrop = (e) => {\r\n        const newFile = e.target.files[0];\r\n        if (newFile) {\r\n            const updatedList = [...fileList, newFile];\r\n            setFileList(updatedList);\r\n            props.onFileChange(updatedList);\r\n        }\r\n    }\r\n\r\n    const fileRemove = (file) => {\r\n        const updatedList = [...fileList];\r\n        updatedList.splice(fileList.indexOf(file), 1);\r\n        setFileList(updatedList);\r\n        props.onFileChange(updatedList);\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <div>\r\n           <div\r\n                ref={wrapperRef}\r\n                className=\"drop-file-input\"\r\n                onDragEnter={onDragEnter}\r\n                onDragLeave={onDragLeave}\r\n                onDrop={onDrop}>\r\n                <div className=\"drop-file-input__label\">\r\n                    <img src={uploadImg} alt=\"\" />\r\n                    <p>Drag & Drop your files here</p>\r\n                </div>\r\n                <input type=\"file\" value=\"\" onChange={onFileDrop}/>\r\n            </div>\r\n            {\r\n                fileList.length > 0 ? (\r\n                    <div className=\"drop-file-preview\">\r\n                        <p className=\"drop-file-preview__title\">\r\n                            Ready to upload\r\n                        </p>\r\n                        {\r\n                            fileList.map((item, index) => (\r\n                                <div key={index} className=\"drop-file-preview__item\">\r\n                                    <img src={ImageConfig[item.type.split('/')[1]] || ImageConfig['default']} alt=\"\" />\r\n                                    <div className=\"drop-file-preview__item__info\">\r\n                                        <p className='font14'>{item.name}</p>\r\n                                        <p>File Size:{item.size}B</p>\r\n                                    </div>\r\n                                    <span className=\"drop-file-preview__item__del\" onClick={() => fileRemove(item)}>x</span>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) : null\r\n            }\r\n           </div>\r\n        </>\r\n    );\r\n}\r\n\r\nDropFileInput.propTypes = {\r\n    onFileChange: PropTypes.func\r\n}\r\n\r\nexport default DropFileInput;\r\n"]},"metadata":{},"sourceType":"module"}